{"componentChunkName":"component---src-templates-blog-post-js","path":"/git-rebase/","result":{"data":{"site":{"siteMetadata":{"title":"Vincent Cordobes","siteUrl":"https://vincentcordobes.github.io","author":"Vincent Cordobes"}},"markdownRemark":{"id":"f8d959ab-be62-572f-aab1-58c5da052f89","html":"<p>There are lots of commands in git and we can often achieve our goal in several different ways. I usually manage to get my stuff done with just few commands like rebase, reset, cherry-pick. But sometimes I felt I was doing it ineffectively. Like for example squashing all commits into a single one so that it is easier to rebase.\nEven though I heard that rebasing with the <code class=\"language-text\">onto</code> option could be useful, I never took the time to <em>man</em> it… until recently.\nSo what are some use cases?</p>\n<ul>\n<li>we want to cherry-pick multiples commits</li>\n<li>we have created a branch from the wrong one</li>\n<li>we want to delete a range of commits</li>\n</ul>\n<p>Basically it all comes down to this: <strong>apply a range of commits elsewhere</strong> </p>\n<h2 id=\"rebase\" style=\"position:relative;\"><a href=\"#rebase\" aria-label=\"rebase permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Rebase</h2>\n<p>Let’s begin with a little reminder about how rebase works in its simplest form.\nThe <em>man</em> gives us:</p>\n<!-- ```\ngit rebase upstream [branch]\n``` -->\n<pre class=\"language-text\">\n<code class=\"language-text\">git rebase <span style=\"background:#ffe5ee\">upstream</span> <span style=\"background:#ffefc0\">[branch]</span></code>\n</pre>\n<p>To illustrate this, let’s take an example. <code class=\"language-text\">topic</code> has forked <code class=\"language-text\">master</code> from <code class=\"language-text\">B</code> but in the meantime a new commit—<code class=\"language-text\">C</code>—has arrived on master. To bring <code class=\"language-text\">topic</code> up to date with <code class=\"language-text\">master</code> we can run:</p>\n<pre class=\"language-text\">\n<code class=\"language-text\">git rebase <span style=\"background:#ffe5ee\">master</span> <span style=\"background:#ffefc0\">topic</span></code>\n</pre>\n<iframe style=\"height:125px\" scrolling=\"no\" src=\"/git-rebase-figure1/\"></iframe>\n<p>Here is what happens:</p>\n<ol start=\"0\">\n<li>Git performs a <code class=\"language-text\">checkout topic</code></li>\n<li>The index and working tree are reset to master (<code class=\"language-text\">reset --hard master</code>) Commits in topic but not in master—namely X, Y, Z—are put aside for later use</li>\n<li>Those commits are applied one by one on master. This is like “cherry-picking” them.</li>\n</ol>\n<p><strong>Note</strong> If we already are on the <em>topic</em> branch (<em>HEAD</em> → <em>topic</em>) then we can omit the <span style=\"background:#ffefc0\">branch</span> arg and just type <code class=\"language-text\">git rebase master</code> (step 0 is skipped) This is a common short-hand.</p>\n<h2 id=\"the-code-classlanguage-text--ontocode-option\" style=\"position:relative;\"><a href=\"#the-code-classlanguage-text--ontocode-option\" aria-label=\"the code classlanguage text  ontocode option permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The <code class=\"language-text\">--onto</code> option</h2>\n<!-- ```\ngit rebase --onto newbase upstream [branch]\n``` -->\n<pre class=\"language-text\">\n<code class=\"language-text\">git rebase --onto <span style=\"background:#eff3c5\">newbase</span> <span style=\"background:#ffe5ee\">upstream</span> <span style=\"background:#ffefc0\">[branch]</span></code>\n</pre>\n<p>The only difference is in step 1. Git hard resets to <span style=\"background:#eff3c5\">newbase</span> instead of <em>upstream</em>.\nStep 2 remains the same, commits <span style=\"background:#ffe5ee\">upstream</span>..<span style=\"background:#ffefc0\">branch</span> are applied. </p>\n<p>This is particularly useful when we want to change the base branch.</p>\n<h4 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h4>\n<p>We have created a branch <em>topicB</em> from <em>topicA</em>  but it was a “mistake”. The work on <em>topicB</em> is totally unrelated to <em>topicA</em> and thus doesn’t depend on it.\nTo fix this unfortunate mistake and make <em>topicB</em> fork from <em>master</em>, we can run:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">git</span> rebase <span class=\"token parameter variable\">--onto</span> master topicA topicB</code></pre></div>\n<iframe style=\"height:171px\" scrolling=\"no\" src=\"/git-rebase-figure2/\"></iframe>\n<p>Step 1 is hard resetting to master, step 2 is applying commits <code class=\"language-text\">topicA..topicB</code> .</p>\n<h4 id=\"removing-some-commits\" style=\"position:relative;\"><a href=\"#removing-some-commits\" aria-label=\"removing some commits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Removing some commits</h4>\n<p>I told you in the intro that we could also remove a range of commits by using this option.\nWell, lets say we have a branch like the one below and want to get rid of commits <em>F</em> and <em>G</em>. </p>\n<iframe style=\"height:76px\" scrolling=\"no\" src=\"/git-rebase-figure3/\"></iframe>\n<p>Step 1 is a hard reset to <em>E</em> and step 2 is picking <code class=\"language-text\">G..I</code>\n(as a reminder <em>G</em> is excluded: this is how <code class=\"language-text\">..</code> works in git)\n<em>F</em> and <em>G</em> are removed.</p>\n<h2 id=\"lets-play-with-the-past\" style=\"position:relative;\"><a href=\"#lets-play-with-the-past\" aria-label=\"lets play with the past permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Let’s play with the past</h2>\n<p>The <code class=\"language-text\">-i</code> option lets us interact with any commits. We can move, squash, delete, rename, edit… It’s on of the most powerful git command that allows us to do pretty much anything with the git history.</p>","frontmatter":{"title":"Demystify git rebase with animations","date":"January 18, 2019","description":"Let's see how git-rebase works with nice animated ASCII arts","thumbnail":{"childImageSharp":{"sizes":{"src":"/static/3211122683a9a05c6be192d516c559f3/eed38/ascii-preview.png","srcSet":"/static/3211122683a9a05c6be192d516c559f3/2ca76/ascii-preview.png 36w,\n/static/3211122683a9a05c6be192d516c559f3/aab46/ascii-preview.png 72w,\n/static/3211122683a9a05c6be192d516c559f3/eed38/ascii-preview.png 144w,\n/static/3211122683a9a05c6be192d516c559f3/d989c/ascii-preview.png 216w,\n/static/3211122683a9a05c6be192d516c559f3/994e1/ascii-preview.png 288w,\n/static/3211122683a9a05c6be192d516c559f3/0edbf/ascii-preview.png 560w","sizes":"(max-width: 144px) 100vw, 144px"}}}},"fields":{"slug":"/git-rebase/"}}},"pageContext":{"slug":"/git-rebase/","previous":{"fields":{"slug":"/ritter-toussaint/"},"frontmatter":{"title":"Cercle et rectangle minimum","draft":false}},"next":{"fields":{"slug":"/tdd/"},"frontmatter":{"title":"A way to approach a problem","draft":true}}}},"staticQueryHashes":["336482444"]}